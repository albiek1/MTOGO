@page "/restaurants"
@using System.Text.Json
@using System.Text.Json.Nodes
@using MongoDB.Bson
@rendermode InteractiveServer

<PageTitle>Restaurants</PageTitle>

<h3>Restaurants</h3>
@if(arraycount > 0)
{
    foreach(Restaurant res in RestaurantList)
    {
        <div class="container">
            <div class="grid">
                <div class="grid-item" data-id="@res.restaurantName">
                    <div class="grid-item-text">
                        <h4 class="pointer-events-none">@res.restaurantName</h4>
                        <p class="item-description pointer-events-none">@res.address</p>
                        <p class="item-description pointer-events-none">@res.contactInfo</p>
                        <p class="item-description pointer-events-none">@res.rating</p>
                    </div>
                </div>
            </div>
        </div>
        
    }
}

@if (!string.IsNullOrEmpty(errormsg))
{
    <p>@errormsg</p>
}

@code {
    HttpClient httpClient = new() { BaseAddress = new Uri("https://localhost:7030") };
    JsonElement jsonstring;
    private string errormsg;
    string temp;
    List<Restaurant> RestaurantList = new();
    int arraycount;
    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await httpClient.GetAsync($"api/Restaurant/allrestaurants");
        if (response.IsSuccessStatusCode)
        {
            string json = await response.Content.ReadAsStringAsync();
            temp = json;
            jsonstring = JsonSerializer.Deserialize<JsonElement>(json);
            temp = jsonstring[0].ToString();
            arraycount = jsonstring.GetArrayLength();
            for(int i = 0; i < arraycount; i++)
            {
                string name = jsonstring[i].GetProperty("name").GetString();
                string address = jsonstring[i].GetProperty("address").GetString();
                string contactInfo = jsonstring[i].GetProperty("contactInfo").GetString();
                double rating = jsonstring[i].GetProperty("restaurantRating").GetDouble();
                Restaurant restaurant = new Restaurant(name, address, contactInfo, rating);
                RestaurantList.Add(restaurant);
            }
            errormsg = null;
        }
        else
        {
            errormsg = "$could not find restaurants" + response.ToString();
        }
        StateHasChanged();
    }

    public class Restaurant(string name, string address, string contactinfo, double rating)
    {
        public string restaurantName = name;
        public string address = address;
        public string contactInfo = contactinfo;
        public double rating = rating;
    }
}